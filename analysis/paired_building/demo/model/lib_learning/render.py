from makeTowerTasks import *

# lookup = {
#     '(lambda (lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left $0 (3x1 (right 9 (3x1 (left $0 (1x3 (1x3 $1))))))))))))))': SupervisedTower('PiL', '(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)'),
#     '(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1)))))))': SupervisedTower('L', '(h (l 2) v v)'),
#     '(lambda (lambda (lambda (3x1 (left $0 (1x3 (1x3 (right $1 $2))))))))': SupervisedTower('L', '(h (l 2) v v)'),
#     '(lambda (3x1 (left 2 (#(lambda (1x3 (1x3 $0))) $0))))': SupervisedTower('L', '(h (l 2) v v)'),
#     '(lambda (#(lambda (1x3 (1x3 $0))) (right 4 (#(lambda (1x3 (1x3 $0))) (left 2 (3x1 $0))))))': SupervisedTower('Pi', '(v v (r 4) v v (l 2) h)'),
#     '(lambda (lambda (#(lambda (1x3 (1x3 $0))) (right 4 (#(lambda (1x3 (1x3 $0))) (left $0 (3x1 $1)))))))': SupervisedTower('Pi', '(v v (r 4) v v (l 2) h)'),
#     '(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0))))': SupervisedTower('C', '(h (l 2) v v (r 2) h)'),
#     '(lambda (lambda (3x1 (left $0 (#(lambda (1x3 (1x3 $0))) $1)))))': SupervisedTower('L', "(h (l 2) v v)"),
#     '(lambda (right 9 (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0)))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right $0 $1))))' : SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 $0) 2))' : SupervisedTower("C", "(h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (#(lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 $0) 2)) $0) 11))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left $0 (3x1 $1)))))))))': SupervisedTower("Pi", "(v v (r 4) v v (l 2) h)"),
#     '(lambda (lambda (3x1 (left $0 (1x3 (1x3 $1))))))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 $0) 2) 11))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 (right $0 $1)) 2)))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 (right $0 $1)))))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 11 (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) $0))))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 (right 9 (3x1 (left 2 (1x3 (1x3 $0))))))))))))) (right 2 (3x1 $0))))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (lambda (lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) ($0 (right $1 ($0 (left 2 $2))))))))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 (right 7 (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) $0))) 2))': SupervisedTower("CPi", "(h (l 2) v v (r 2) h (r 7) v v (r 4) v v (l 2) h)"),
#     '(lambda (lambda (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (#(lambda (lambda (3x1 (left 2 (1x3 (1x3 (right $0 $1))))))) (3x1 $0) $1) 11)))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (lambda (#(lambda (lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left $0 (3x1 (right 9 (3x1 (left $0 (1x3 (1x3 $1)))))))))))))) (right $0 (3x1 $1)) $0)))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) (right 7 (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) $0))))': SupervisedTower("CPi", "(h (l 2) v v (r 2) h (r 7) v v (r 4) v v (l 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (right 9 $0)))': SupervisedTower("Pi", "(v v (r 4) v v (l 2) h)"),
#     '(lambda (#(lambda (lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left $0 (3x1 $1))))))))) $0 2))': SupervisedTower("Pi", "(v v (r 4) v v (l 2) h)"),
#     '(lambda (lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right $0 (3x1 $1)))))': SupervisedTower("C", "(h (l 2) v v (r 2) h)"),
#     '(lambda (3x1 (left 2 (#(lambda (1x3 (1x3 $0))) $0))))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (right 9 (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) $0))))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (right 9 (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0))))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 9 (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) $0))))': SupervisedTower("LPi", "(h (l 2) v v (r 9) v v (r 4) v v (l 2) h)"),
#     '(lambda (#(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (right 9 $0))) (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0)))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (right 9 $0))) (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) $0)))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(lambda (right 9 (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0))) $0)))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) (#(lambda (right 9 (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0))) $0)))': SupervisedTower("CL", "(h (l 2) v v (r 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) (#(right 9) (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0))))': SupervisedTower("CL", "(h (l 2) v v (r 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(right 9) (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) $0))))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(right 9) (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0))))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (#(right 9) (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) $0))))': SupervisedTower("LPi", "(h (l 2) v v (r 9) v v (r 4) v v (l 2) h)"),
#     '(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(right 9) $0)))': SupervisedTower("Pi", "(v v (r 4) v v (l 2) h)"),
#     '(lambda (#(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(right 9) $0))) (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) $0)))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (#(lambda (#(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))) (#(right 9) $0))) (#(lambda (#(lambda (3x1 (left 2 (1x3 (1x3 $0))))) (right 2 (3x1 $0)))) $0)))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 $0)))))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 (right 9 (3x1 (left 2 (1x3 (1x3 $0)))))))))))))': SupervisedTower("PiL", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v)"),
#     '(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0))))))))': SupervisedTower("Pi", "(v v (r 4) v v (l 2) h)"),
#     '(lambda (right 9 (3x1 (left 2 (1x3 (1x3 $0))))))': SupervisedTower("L", "(h (l 2) v v)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 (right 2 (3x1 (right 7 (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))))))))))': SupervisedTower("CPi", "(h (l 2) v v (r 2) h (r 7) v v (r 4) v v (l 2) h)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 (right 2 (3x1 $0)))))))': SupervisedTower("C", "(h (l 2) v v (r 2) h)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 (right 2 (3x1 (right 9 (3x1 (left 2 (1x3 (1x3 $0))))))))))))': SupervisedTower("CL", "(h (l 2) v v (r 2) h (r 9) h (l 2) v v)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 (right 9 (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 $0)))))))))))))': SupervisedTower("LPi", "(h (l 2) v v (r 9) v v (r 4) v v (l 2) h)"),
#     '(lambda (3x1 (left 2 (1x3 (1x3 (right 11 (3x1 (left 2 (1x3 (1x3 (right 2 (3x1 $0))))))))))))': SupervisedTower("LC", "(h (l 2) v v (r 11) h (l 2) v v (r 2) h)"),
#     '(lambda (1x3 (1x3 (right 4 (1x3 (1x3 (left 2 (3x1 (right 9 (3x1 (left 2 (1x3 (1x3 (right 2 (3x1 $0)))))))))))))))': SupervisedTower("PiC", "(v v (r 4) v v (l 2) h (r 9) h (l 2) v v (r 2) h)"),
#     }
   
towers = dict(C = SupervisedTower("C", "(h (l 1) v v (r 1) h)"),
                L = SupervisedTower("L", "(h (l 4) h (l 1) v v)"),
                Pi = SupervisedTower("Pi", "(v (r 6) v (l 5) h (r 4) h)"),
                CL = SupervisedTower("CL", "(h (l 1) v v (r 1) h (r 12) h (l 4) h (l 1) v v)"),
                CPi = SupervisedTower("CPi", "(h (l 1) v v (r 1) h (r 6) v (r 6) v (l 5) h (r 4) h)"),
                LPi = SupervisedTower("LPi", "(h (l 4) h (l 1) v v (r 9) v (r 6) v (l 5) h (r 4) h)"),
                LC = SupervisedTower("LC", "(h (l 4) h (l 1) v v (r 12) h (l 1) v v (r 1) h)"),
                PiC = SupervisedTower("PiC", "(v (r 6) v (l 5) h (r 4) h (r 7) h (l 1) v v (r 1) h)"),
                PiL = SupervisedTower("PiL", "(v (r 6) v (l 5) h (r 4) h (r 9) h (l 4) h (l 1) v v)"))
                
# ['PiC', 'LC', 'PiL', 'CL', 'CPi', 'LPi', 'PiC', 'PiL', 'LC', 'CL', 'LPi', 'CPi']
lookup = {
    '(lambda (lambda (1x2 (1x2 (right $0 (2x1 $1))))))': [SupervisedTower('1', '(v v (r 1) h)'), SupervisedTower('2', '(v v (r 12) h)')],
'(lambda (lambda (lambda (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 (right $0 (2x1 (left $1 $2))))))))))))': [SupervisedTower('3', '((r 6) v (l 5) h (r 4) h (r 7) h)'), SupervisedTower('4', '((r 6) v (l 5) h (r 4) h (r 9) h)')],
'(lambda (lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 (right $0 $1))))))))))': [SupervisedTower('5', '(v (r 6) v (l 5) h (r 4) h)')],
'(lambda (lambda (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) (right $0 $1))))': [towers['Pi']],
'(lambda (lambda (2x1 (left $0 $1))))': [SupervisedTower('6', '(h)')],
'(lambda (lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right $0 (2x1 $1)))))))))':  [towers['Pi']],
'(lambda (lambda (lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 (right $0 (2x1 (left $1 $2)))))))))))))': [SupervisedTower('7', '(v (r 6) v (l 5) h (r 4) h (r 7) h)')],
'(lambda (lambda (left $0 (2x1 $1))))': [SupervisedTower('6', '(h)')],
'(lambda (lambda (2x1 (left 1 (1x2 (1x2 (right $0 $1)))))))': [SupervisedTower('8b', '(h (l 1) v v)')],
'(lambda (lambda (#(lambda (1x2 (right 6 (1x2 (left 5 $0))))) (2x1 (right 4 (2x1 (right $0 $1)))))))': [towers['Pi']],
'(lambda (lambda (right $0 (2x1 (left 1 (1x2 (1x2 (right 1 (2x1 $1)))))))))': [towers['C']],
'(lambda (lambda (#(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0)))) (right $0 $1))))': [towers['C']],
'(lambda (lambda (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) (right $0 $1))))': [towers['L']],
'(lambda (lambda (right $0 (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) $1))))': [towers['Pi']],
'(lambda (lambda (lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right $0 (2x1 (right $1 $2)))))))))))': [towers['Pi']],
'(lambda (#(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0)))) (right 6 (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) $0))))': [towers['CPi']],
'(lambda (#(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0)))) (right 12 (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) $0))))': [towers['CL']],
'(lambda (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) (right 7 (#(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0)))) $0))))': [towers['PiC']],
'(lambda (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) (right 9 (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) $0))))': [towers['PiL']],
'(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (#(lambda (right 1 (2x1 $0))) $0)))': [towers['C']],
'(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0))))': [towers['C']],
'(lambda (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) (right 9 (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) $0)))):': [towers['LPi']],
'(lambda (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) (right 12 (#(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0)))) $0))))': [towers['LPi']],
'(lambda (#(lambda (lambda (2x1 (left 1 (1x2 (1x2 (right $0 $1))))))) (2x1 $0) 1))': [towers['C']],
'(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0))))))))': [towers['Pi']],
'(lambda (1x2 (right 6 (1x2 (left 5 $0)))))': [SupervisedTower('9', '(v (r 6) v)')],
'(lambda (2x1 (left 1 (1x2 (1x2 $0)))))': [SupervisedTower('8', '(h (l 1) v v)')],
'(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0))))': [towers['L']],
'(lambda (right 1 (2x1 $0)))': [SupervisedTower('6', '(h)')],
# added 06/23/23
'(lambda (lambda (right $0 (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $1))))))))))': [towers['Pi']],
'(lambda (lambda (2x1 (left 4 (#(lambda (lambda (2x1 (left 1 (1x2 (1x2 (right $0 $1))))))) $0 $1)))))': [towers['L']],
'(lambda (#(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0)))) (right 9 (#(lambda (1x2 (right 6 (1x2 (left 5 (2x1 (right 4 (2x1 $0)))))))) $0))))': [towers['LPi']]
}



from program import *

# x = Program.parse('(lambda (2x1 (left 4 (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) $0))))')
# y = Program.parse('(lambda (#(lambda (2x1 (left 1 (1x2 (1x2 $0))))) (right 1 (2x1 $0))))')
# print(x.body)